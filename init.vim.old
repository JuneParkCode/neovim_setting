call plug#begin('~/.vim/plugged')
Plug 'tomasiser/vim-code-dark'
Plug 'HenryNewcomer/vim-theme-papaya'
Plug 'mhinz/vim-startify'
Plug 'preservim/nerdtree'
Plug 'bling/vim-airline'
Plug 'vim-syntastic/syntastic'
Plug 'sheerun/vim-polyglot'
Plug 'navarasu/onedark.nvim'
Plug 'preservim/tagbar'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'akinsho/toggleterm.nvim', {'tag' : 'v2.*'}
call plug#end()
" lua configs
lua require("plugins.toggleterms.settings")

"colorscheme codedark
"colorscheme papaya
let g:onedark_config = {
  \ 'style': 'deep',
\ }
colorscheme onedark
let g:airline_theme='codedark'
"let g:airline_theme = 'papaya'
let g:airline#extensions#tabline#enabled = 1 " turn on buffer list
nmap nm :NERDTree<CR>
nmap n, :NERDTreeToggle<CR>
nmap ]\ :n<CR>
nmap \] :N<CR>
nmap ./ :bnext<CR>
nmap /. :bprevious<CR>
if has("syntax")
	syntax on
	syntax match cType "t_l"
endif

set mouse=a
set nu
set autoindent
set cindent
set showmatch
set laststatus=2
set ruler
set ts=4
"syntastic
let g:syntastic_cpp_compiler = "g++"
let g:syntastic_cpp_compiler_options = "-std=c++17 -Wall -Wextra -Wpedantic"
let g:syntastic_c_compiler_options = "-std=c90 -Wall -Wextra -Werror"
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
" ------------------------------------
" nvim-treesitter 설정
" ------------------------------------
lua <<EOF
require'nvim-treesitter.configs'.setup {
  ensure_installed = "c",
  highlight = {
    enable = true,
    additional_vim_regex_highlighting = true,
  },
}
EOF
